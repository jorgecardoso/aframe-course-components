{"version":3,"file":"aframe-course.interaction.min.js","mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,EACvE,CACA,CATD,CASGC,MAAM,KACT,O,WCLA,IAAIC,EAAcC,OAAOC,MAAMF,YAuD/B,GAAsB,oBAAXC,OACT,MAAM,IAAIE,MAAM,gEAGlBT,EAAOD,QAAWQ,OAAOG,kBAAkB,YAAa,CACtDC,OAAQ,CACNC,QAAS,GACTC,MAAO,SAAUC,GACbC,QAAQC,IAAI,UAAWF,GACvB,IAAIG,EA7CK,SAAoBH,GAEnC,SAASI,EAAcC,GACrB,MAAO,IAAMA,EAAI,GAAGC,aACtB,CAMA,IAEIC,EACAC,EACAC,EACAC,EALAC,EAAOlB,OAAOC,MAAMF,YAAYO,MAAMC,GAQ1C,IAAKO,KAAOI,EACVH,EAAYD,EAAIK,MAAM,KAAK,GAC3BH,EAAYF,EAAIK,MAAM,KAAKC,MAAM,GAAGC,KAAK,KAErCN,KADJE,EAA8BF,EAdnBO,QAAQ,WAAYX,KAmB3BX,OAAOuB,WAAWN,KAAmBjB,OAAOuB,WAAWR,KAEzDG,EADUD,EAAcO,OAAO,IAAKR,IACpBE,EAAKJ,UACdI,EAAKJ,IAIhB,OAAOI,CACT,CAWgBO,CAAWlB,GAErB,OADEC,QAAQC,IAAI,WAAYC,GACnBA,CACT,EACAgB,UAAW,SAAUR,GAEnB,OADEV,QAAQC,IAAI,cAAcS,GACrBnB,EAAY2B,UAAUR,EAC/B,GAGFS,UAAU,EAEVC,KAAM,WACJC,KAAKC,aAAe,KACpBD,KAAKE,UAAY,IACnB,EAEAC,OAAQ,SAAUC,GAChBJ,KAAKK,sBACLL,KAAKM,sBACLN,KAAKO,kBACP,EAEAC,MAAO,WACLR,KAAKK,qBACP,EAEAI,KAAM,WACJT,KAAKO,kBACP,EAMAD,oBAAqB,WACnB,IAEII,EACAC,EACAC,EAJAvB,EAAOW,KAAKX,KACZwB,EAAKb,KAAKa,GAMdH,EAAQrB,EAAKyB,QAAUd,KAAKe,GAC5BJ,EAAStB,EAAK2B,QAGdJ,EAAWD,EAASE,EAAGI,QAAQC,cAAcP,GAAUE,EAEvDb,KAAKE,UAAYQ,EAEjB,MAAMS,EAAU,KACd,IAAIC,EAEJ,IAAKA,KAAY/B,EACE,WAAb+B,GAAsC,YAAbA,GAC7BjD,OAAOC,MAAMiD,OAAOC,qBAAqBC,KAAKvB,KAAMY,EAAUQ,EAChB/B,EAAK+B,GACrD,EAGGI,MAAMnC,EAAKoC,QAIdzB,KAAKC,aAAekB,EAFpBnB,KAAKC,aAAe,KAAQyB,WAAWP,EAASQ,WAAWtC,EAAKoC,QAAQ,CAI5E,EAEAlB,iBAAkB,WAChBP,KAAKa,GAAGN,iBAAiBP,KAAKE,UAAWF,KAAKC,aAChD,EAEAI,oBAAqB,WACnBL,KAAKa,GAAGR,oBAAoBL,KAAKE,UAAWF,KAAKC,aACnD,G,GC/IE2B,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAapE,QAGrB,IAAIC,EAASgE,EAAyBE,GAAY,CAGjDnE,QAAS,CAAC,GAOX,OAHAsE,EAAoBH,GAAUlE,EAAQA,EAAOD,QAASkE,GAG/CjE,EAAOD,OACf,CCtBA,CAAQ,K,SDCJiE,C","sources":["webpack://aframe-course-components/webpack/universalModuleDefinition","webpack://aframe-course-components/./src/interaction/new-event-set.js","webpack://aframe-course-components/webpack/bootstrap","webpack://aframe-course-components/./src/interaction/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","const EPS = 0.1;\n\n\n\n\nvar styleParser = AFRAME.utils.styleParser;\n\n/* global AFRAME */\n// AFRAME styleParse has one issue: it transforms hyphenated keys to camel-case.\n// This is a problem when those keys are component names, as A-Frame component\n// names often include hyphens, and are not converted internally to camel case.\n\n// To compensate for this, we post-process the data from the parser:\n// - analyze the first part of the string, represeting the component\n// - if translating this out of camel case to a dashed value gives\n//   a better match against known A-Frame components, then use the dashed value\n//   for the component name.\n\n// This solution is not 100% robust, but good enough for most circumstances.\n// - Will not handle component names that have a mix of camel case and dashes\n//   e.g. example-componentOne\n// - Could give incorrect results in case where two components have names that\n//   only differ by their casing.\n//   e.g. example-component-two & exampleComponentTwo\nvar styleParse = function styleParse(value) {\n\n  function dashLowerCase(str) {\n    return '-' + str[0].toLowerCase();\n  }\n\n  function fromCamelCase(str) {\n    return str.replace(/([A-Z])/g, dashLowerCase);\n  }\n\n  var data = AFRAME.utils.styleParser.parse(value);\n\n  var key;\n  var component;\n  var remainder;\n  var dashComponent;\n  var dashKey;\n\n  for (key in data) {\n    component = key.split('.')[0];\n    remainder = key.split('.').slice(1).join('.');\n    dashComponent = fromCamelCase(component);\n    if (component === dashComponent) {\n      continue;\n    }\n\n    if (AFRAME.components[dashComponent] && !AFRAME.components[component]) {\n      dashKey = dashComponent.concat('.', remainder);\n      data[dashKey] = data[key];\n      delete data[key];\n    }\n  }\n\n  return data;\n};\n\nif (typeof AFRAME === 'undefined') {\n  throw new Error('Component attempted to register before AFRAME was available.');\n}\n\nmodule.exports =  AFRAME.registerComponent('event-set', {\n  schema: {\n    default: '',\n    parse: function (value) {\n        console.log(\"value: \", value);\n        let r = styleParse(value);\n        console.log(\"parsed: \", r)\n      return r;\n    },\n    stringify: function (data) {\n        console.log(\"stringify: \",data);\n      return styleParser.stringify(data);\n    },\n  },\n\n  multiple: true,\n\n  init: function () {\n    this.eventHandler = null;\n    this.eventName = null;\n  },\n\n  update: function (oldData) {\n    this.removeEventListener();\n    this.updateEventListener();\n    this.addEventListener();\n  },\n\n  pause: function () {\n    this.removeEventListener();\n  },\n\n  play: function () {\n    this.addEventListener();\n  },\n\n  /**\n   * Update source-of-truth event listener registry.\n   * Does not actually attach event listeners yet.\n   */\n  updateEventListener: function () {\n    var data = this.data;\n    var el = this.el;\n    var event;\n    var target;\n    var targetEl;\n\n    // Set event listener using `_event`.\n    event = data._event || this.id;\n    target = data._target;\n\n    // Decide the target to `setAttribute` on.\n    targetEl = target ? el.sceneEl.querySelector(target) : el;\n\n    this.eventName = event;\n\n    const handler = () => {\n      var propName;\n      // Set attributes.\n      for (propName in data) {\n        if (propName === '_event' || propName === '_target') { continue; }\n        AFRAME.utils.entity.setComponentProperty.call(this, targetEl, propName,\n                                                      data[propName]);\n      }\n    };\n\n    if (!isNaN(data._delay)) {\n      // Delay.\n      this.eventHandler = () => { setTimeout(handler, parseFloat(data._delay)); };\n    } else {\n      this.eventHandler = handler;\n    }\n  },\n\n  addEventListener: function () {\n    this.el.addEventListener(this.eventName, this.eventHandler);\n  },\n\n  removeEventListener: function () {\n    this.el.removeEventListener(this.eventName, this.eventHandler);\n  }\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","require('./new-event-set');\n"],"names":["root","factory","exports","module","define","amd","a","i","self","styleParser","AFRAME","utils","Error","registerComponent","schema","default","parse","value","console","log","r","dashLowerCase","str","toLowerCase","key","component","remainder","dashComponent","data","split","slice","join","replace","components","concat","styleParse","stringify","multiple","init","this","eventHandler","eventName","update","oldData","removeEventListener","updateEventListener","addEventListener","pause","play","event","target","targetEl","el","_event","id","_target","sceneEl","querySelector","handler","propName","entity","setComponentProperty","call","isNaN","_delay","setTimeout","parseFloat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}