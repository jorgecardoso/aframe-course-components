{"version":3,"file":"aframe-course.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;ACVA,mBAAO,CAAC,2DAAiB;AACzB,mBAAO,CAAC,+DAAmB;;;;;;;;;;;ACD3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;ACjhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kBAAkB;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;;;;;;;;;AC3JA;AACA;AACA;AACA,eAAe,iCAAiC;AAChD,iBAAiB,iCAAiC;AAClD,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;;;;;;;;;AChCL,mBAAO,CAAC,oDAAc;;;;;;UCAtB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,mBAAO,CAAC,qDAAmB;AAC3B,mBAAO,CAAC,mDAAkB;AAC1B;AACA;AACA;AACA,E","sources":["webpack://aframe-course-components/webpack/universalModuleDefinition","webpack://aframe-course-components/./src/interaction/index.js","webpack://aframe-course-components/./src/interaction/new-event-set.js","webpack://aframe-course-components/./src/interaction/toggle-controls.js","webpack://aframe-course-components/./src/locomotion/autoportal.js","webpack://aframe-course-components/./src/locomotion/index.js","webpack://aframe-course-components/webpack/bootstrap","webpack://aframe-course-components/./index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","require('./new-event-set');\r\nrequire('./toggle-controls');\r\n","const EPS = 0.1;\r\n\r\n\r\n\r\n\r\nvar styleParser = AFRAME.utils.styleParser;\r\n\r\n/* global AFRAME */\r\n// AFRAME styleParse has one issue: it transforms hyphenated keys to camel-case.\r\n// This is a problem when those keys are component names, as A-Frame component\r\n// names often include hyphens, and are not converted internally to camel case.\r\n\r\n// To compensate for this, we post-process the data from the parser:\r\n// - analyze the first part of the string, represeting the component\r\n// - if translating this out of camel case to a dashed value gives\r\n//   a better match against known A-Frame components, then use the dashed value\r\n//   for the component name.\r\n\r\n// This solution is not 100% robust, but good enough for most circumstances.\r\n// - Will not handle component names that have a mix of camel case and dashes\r\n//   e.g. example-componentOne\r\n// - Could give incorrect results in case where two components have names that\r\n//   only differ by their casing.\r\n//   e.g. example-component-two & exampleComponentTwo\r\nvar styleParse = function styleParse(value) {\r\n\r\n  function dashLowerCase(str) {\r\n    return '-' + str[0].toLowerCase();\r\n  }\r\n\r\n  function fromCamelCase(str) {\r\n    return str.replace(/([A-Z])/g, dashLowerCase);\r\n  }\r\n\r\n  var data = AFRAME.utils.styleParser.parse(value);\r\n\r\n  var key;\r\n  var component;\r\n  var remainder;\r\n  var dashComponent;\r\n  var dashKey;\r\n\r\n  for (key in data) {\r\n    component = key.split('.')[0];\r\n    remainder = key.split('.').slice(1).join('.');\r\n    dashComponent = fromCamelCase(component);\r\n    if (component === dashComponent) {\r\n      continue;\r\n    }\r\n\r\n    if (AFRAME.components[dashComponent] && !AFRAME.components[component]) {\r\n      dashKey = dashComponent.concat('.', remainder);\r\n      data[dashKey] = data[key];\r\n      delete data[key];\r\n    }\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nif (typeof AFRAME === 'undefined') {\r\n  throw new Error('Component attempted to register before AFRAME was available.');\r\n}\r\n\r\nmodule.exports =  AFRAME.registerComponent('new-event-set', {\r\n  schema: {\r\n    default: '',\r\n    parse: function (value) {\r\n        console.log(\"value: \", value);\r\n        let r = styleParse(value);\r\n        console.log(\"parsed: \", r)\r\n      return r;\r\n    },\r\n    stringify: function (data) {\r\n        console.log(\"stringify: \",data);\r\n      return styleParser.stringify(data);\r\n    },\r\n  },\r\n\r\n  multiple: true,\r\n\r\n  init: function () {\r\n    this.eventHandler = null;\r\n    this.eventName = null;\r\n  },\r\n\r\n  update: function (oldData) {\r\n    this.removeEventListener();\r\n    this.updateEventListener();\r\n    this.addEventListener();\r\n  },\r\n\r\n  pause: function () {\r\n    this.removeEventListener();\r\n  },\r\n\r\n  play: function () {\r\n    this.addEventListener();\r\n  },\r\n\r\n  /**\r\n   * Update source-of-truth event listener registry.\r\n   * Does not actually attach event listeners yet.\r\n   */\r\n  updateEventListener: function () {\r\n    var data = this.data;\r\n    var el = this.el;\r\n    var event;\r\n    var target;\r\n    var targetEl;\r\n\r\n    // Set event listener using `_event`.\r\n    event = data._event || this.id;\r\n    target = data._target;\r\n\r\n    // Decide the target to `setAttribute` on.\r\n    targetEl = target ? el.sceneEl.querySelector(target) : el;\r\n\r\n    this.eventName = event;\r\n\r\n    const handler = () => {\r\n      var propName;\r\n      // Set attributes.\r\n      for (propName in data) {\r\n        if (propName === '_event' || propName === '_target') { continue; }\r\n        AFRAME.utils.entity.setComponentProperty.call(this, targetEl, propName,\r\n                                                      data[propName]);\r\n      }\r\n    };\r\n\r\n    if (!isNaN(data._delay)) {\r\n      // Delay.\r\n      this.eventHandler = () => { setTimeout(handler, parseFloat(data._delay)); };\r\n    } else {\r\n      this.eventHandler = handler;\r\n    }\r\n  },\r\n\r\n  addEventListener: function () {\r\n    this.el.addEventListener(this.eventName, this.eventHandler);\r\n  },\r\n\r\n  removeEventListener: function () {\r\n    this.el.removeEventListener(this.eventName, this.eventHandler);\r\n  }\r\n});","/* Taken from https://github.com/mattrei/aframe-toggle-controls-component \r\nRemoved restriction to A-Entity and A-Scene tags.\r\n */\r\nif (typeof AFRAME === 'undefined') {\r\n    throw new Error('Component attempted to register before AFRAME was available.');\r\n}\r\n\r\nconst bind = AFRAME.utils.bind;\r\n\r\nmodule.exports = AFRAME.registerComponent('toggle-controls', {\r\n    schema: {\r\n        enabled: {\r\n            default: true,\r\n            type: 'boolean'\r\n        },\r\n        toggled: {\r\n            default: false,\r\n            type: 'boolean'\r\n        },\r\n        events: {\r\n            type: 'array',\r\n            default: []\r\n        },\r\n        type: {\r\n            oneOf: ['single', 'double'],\r\n            default: 'single'\r\n        },\r\n        onEvents: {\r\n            type: 'array'\r\n        },\r\n        offEvents: {\r\n            type: 'array'\r\n        },\r\n        toggleTimeout: {\r\n            type: 'int',\r\n            default: 400\r\n        },\r\n        eventCond: {\r\n            default: ''\r\n        }\r\n    },\r\n\r\n    multiple: true,\r\n\r\n    init: function () {\r\n        this.clickTimer = null;\r\n        this.onToggle = bind(this.onToggle, this);\r\n    },\r\n\r\n    update: function (oldData) {\r\n        const data = this.data;\r\n        this.toggled = data.toggled;\r\n        this.eventCond = data.eventCond && data.eventCond.split('=').length == 2 ? data.eventCond.split('=') : null;\r\n    },\r\n\r\n    play: function () {\r\n        this.addEventListeners();\r\n    },\r\n\r\n    pause: function () {\r\n        this.removeEventListeners();\r\n    },\r\n\r\n    remove: function () {\r\n        this.pause();\r\n    },\r\n\r\n    addEventListeners: function () {\r\n        addEventListeners(this.el, this.data.events, this.onToggle);\r\n    },\r\n\r\n    removeEventListeners: function () {\r\n        removeEventListeners(this.el, this.data.events, this.onToggle);\r\n    },\r\n\r\n    onToggle: function (evt) {\r\n        const data = this.data;\r\n\r\n        if (!data.enabled) return;\r\n        if (this.eventCond) {\r\n            if (evt[this.eventCond[0]] !== this.eventCond[1]) return;\r\n        }\r\n        console.log(evt.target.tagName);\r\n        if (\r\n            true\r\n            /*evt.target.tagName === 'A-ENTITY' \r\n                 || evt.target.tagName === 'A-SCENE'\r\n                 \r\n                 evt.target.tagName === 'CANVAS' \r\n                 || evt.target.tagName === 'A-SCENE'\r\n                 || evt.target.tagName === 'BODY'\r\n                 */\r\n        ) {\r\n            if (data.type === 'double') {\r\n                if (this.clickTimer == null) {\r\n                    this.clickTimer = setTimeout(() => {\r\n                        this.clickTimer = null;\r\n                    }, data.toggleTimeout);\r\n                } else {\r\n                    clearTimeout(this.clickTimer);\r\n                    this.clickTimer = null;\r\n                    this._toggle();\r\n                }\r\n            } else {\r\n                this._toggle();\r\n            }\r\n        }\r\n    },\r\n\r\n    _toggle: function () {\r\n\r\n        const data = this.data;\r\n\r\n        if (this.toggled) {\r\n            emitEvents(this.el, data.offEvents);\r\n        } else {\r\n            emitEvents(this.el, data.onEvents);\r\n        }\r\n        console.log(this.toggled)\r\n        this.toggled = !this.toggled;\r\n    }\r\n});\r\n\r\n\r\nfunction emitEvents(el, eventNames) {\r\n    var i;\r\n    for (i = 0; i < eventNames.length; i++) {\r\n        el.emit(eventNames[i], null);\r\n        console.log(\"emmited: \", eventNames[i])\r\n    }\r\n}\r\n\r\n\r\nfunction addEventListeners(el, eventNames, handler) {\r\n    var i;\r\n    for (i = 0; i < eventNames.length; i++) {\r\n        const eventName = eventNames[i];\r\n        if (eventName.includes('key')) {\r\n            window.addEventListener(eventName, handler);\r\n        } else {\r\n            el.addEventListener(eventName, handler);\r\n        }\r\n    }\r\n}\r\n\r\nfunction removeEventListeners(el, eventNames, handler) {\r\n    var i;\r\n    for (i = 0; i < eventNames.length; i++) {\r\n        const eventName = eventNames[i];\r\n        if (eventName.includes('key')) {\r\n            window.removeEventListener(eventName, handler);\r\n        } else {\r\n            el.removeEventListener(eventName, handler);\r\n        }\r\n    }\r\n}"," module.exports =  AFRAME.registerComponent('autoportal', {\r\n      dependencies: ['aabb-collider'],\r\n      schema: {\r\n        rig: { type: 'string', default: \"#rig\" },\r\n        debug: { type: 'boolean', default: false },\r\n      },\r\n\r\n      init: function () {\r\n        console.log(\"Initting Auto Portal Component\")\r\n      },\r\n      update: function () {\r\n        this.rig = this.el.sceneEl.querySelector(this.data.rig);\r\n        if (!this.rig)\r\n          console.warn(\"Could not find player rig! Check 'rig' property: \", this.data.rig)\r\n        else {\r\n          this.rig.setAttribute(\"data-aabb-collider-dynamic\");\r\n          let cam = rig.querySelector(\"[camera]\") || rig.querySelector(\"a-camera\");\r\n          let player = document.createElement(\"a-cylinder\");\r\n          player.setAttribute('radius', '0.2');\r\n          player.setAttribute('height', '2');\r\n          player.setAttribute('visible', 'false');\r\n          cam.appendChild(player)\r\n        }\r\n\r\n        this.el.setAttribute('aabb-collider', 'objects', this.data.rig);\r\n        this.el.setAttribute('aabb-collider', 'debug', this.data.debug);\r\n        this.el.addEventListener('hitstart', function () {\r\n          console.log(\"Auto Portal hit. Openning target\")\r\n          document.location.href = this.el.getAttribute('href');\r\n        }.bind(this));\r\n\r\n      }\r\n    });","require('./autoportal');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","require('./src/interaction');\r\nrequire('./src/locomotion');\r\n/*require('./src/misc');\r\nrequire('./src/pathfinding');\r\nrequire('./src/primitives');\r\n*/"],"names":[],"sourceRoot":""}